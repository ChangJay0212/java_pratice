1. 封包 Package
    1.1 可以利用OOP, 方便專案管理
    1.2 在程式碼中必須使用package關鍵字宣告
        ex: BasicMath.jave 最上方就要使用 `package math` 去定義package位置
            main.java 中若要使用 BasicMath，需加上 `import math.BasicMath;`
            root
            │
            ├── main.java
            |     ├──  math
            |            ├── BasicMath.jave
    1.3 使用 `import 封包名稱.* ` 可以載入所有
    1.4 如果要用的類別，檔案和進入點是不同層級的 就要用import ;
        如果是同層級，但要引用的類別方式和檔案名稱不一樣，要分開編譯，且是要優先編譯被引用得檔案;
        或者是把引用的類別方式和檔案名稱改成一樣。


2. 權限控制
    | 修飾子            | 同一類別 | 同一 package | 子類別 | 其他類別 |
    | -------------- | ---- | ---------- | --- | ---- |
    | `public`       | ✅    | ✅          | ✅   | ✅    |
    | `protected`    | ✅    | ✅          | ✅   | ❌    |
    | `default`（無修飾） | ✅    | ✅          | ❌   | ❌    |
    | `private`      | ✅    | ❌          | ❌   | ❌    |
    ex :
        類別結構說明
            packageA
            │
            ├── Parent.java       ← 定義四種不同修飾子的欄位
            ├── SamePackage.java  ← 與 Parent 同 package
            │
            packageB
            │
            ├── SubClass.java     ← 繼承 Parent（子類別，不同 package）
            ├── OtherClass.java   ← 無繼承，不同 package
